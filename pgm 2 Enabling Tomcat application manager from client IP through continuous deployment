Pre-requisites
          1.	EC2 instance with Java v1.8.x
Install Apache Tomcat
          1.	Download tomcat packages from https://tomcat.apache.org/download-80.cgi onto /opt on EC2 instance
          Note: Make sure you change <version> with the tomcat version which you download.
# Create tomcat directory
          $cd /opt
          $wget http://mirrors.fibergrid.in/apache/tomcat/tomcat-8/v8.5.35/bin/apache-tomcat-8.5.35.tar.gz
          $tar -xvzf /opt/apache-tomcat-<version>.tar.gz
          2.	give executing permissions to startup.sh and shutdown.sh which are under bin.
          3.	$chmod +x /opt/apache-tomcat-<version>/bin/startup.sh 
          $chmod +x /opt/apache-tomcat-<version>/bin/shutdown.sh
          Note: you may get below error while starting tomcat incase if you don’t install Java
          Neither the JAVA_HOME nor the JRE_HOME environment variable is defined At least one of these environment variable is needed to run this program
          4.	create link files for tomcat startup.sh and shutdown.sh
          5.	$ln -s /opt/apache-tomcat-<version>/bin/startup.sh /usr/local/bin/tomcatup
          6.	$ln -s /opt/apache-tomcat-<version>/bin/shutdown.sh /usr/local/bin/tomcatdown
          tomcatup
Check point :
          access tomcat application from browser on port 8080
          •	http://<Public_IP>:8080
          Using unique ports for each application is a best practice in an environment. But tomcat and Jenkins runs on ports number 8080. Hence lets change tomcat port number to 8090. Change port number in conf/server.xml file under tomcat home
          $cd /opt/apache-tomcat-<version>/conf
          # update port number in the "connecter port" field in server.xml
          # restart tomcat after configuration update
          $tomcatdown
          $tomcatup
Check point :
        Access tomcat application from browser on port 8090
        •	http://<Public_IP>:8090
        1.	now application is accessible on port 8090. but tomcat application doesnt allow to login from browser. changing a default parameter in context.xml does address this issue
        2.	#search for context.xml
        $find / -name context.xml
        3.	above command gives 3 context.xml files. comment () Value ClassName field on files which are under webapp directory. After that restart tomcat services to effect these changes. At the time of writing this lecture below 2 files are updated.
        4.	$/opt/tomcat/webapps/host-manager/META-INF/context.xml
        5.	$/opt/tomcat/webapps/manager/META-INF/context.xml
        6.	
        7.	# Restart tomcat services
        8.	$tomcatdown  
        $tomcatup
        9.	Update users information in the tomcat-users.xml file goto tomcat home directory and Add below users to conf/tomcat-users.xml file
        10.	 <role rolename="manager-gui"/>
        11.	 <role rolename="manager-script"/>
        12.	 <role rolename="manager-jmx"/>
        13.	 <role rolename="manager-status"/>
        14.	 <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
        15.	 <user username="deployer" password="deployer" roles="manager-script"/>
         <user username="tomcat" password="s3cret" roles="manager-gui"/>
        16.	Restart service and try to login to tomcat application from the browser. This time it should be Successful
